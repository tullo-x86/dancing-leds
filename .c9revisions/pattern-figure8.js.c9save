{"ts":1371623443308,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Figure8\n\n$(function() {\n    \n    Pattern = window.Pattern || {};\n    \n    var Chaser = function(ring, led, clockwise) {\n        this.ring = ring;\n        this.led = led;\n        this.isClockwise = clockwise;\n    };\n    \n    Pattern.ChasingLeds = function() {\n        var states = [{\n            position: {\n                ring: 0,\n                led: 0\n            },\n            direction: true\n        },\n        {\n            position: {\n                ring: 2,\n                led: 10\n            },\n            direction: true\n        },\n        {\n            position: {\n                ring: 3,\n                led: 6\n            },\n            direction: true\n        }];\n        \n        // For V1, assume we're always changing directions\n        var junctions = [\n                {from: {ring: 0, led:  8}, to: {ring: 1, led:  0} },\n                {from: {ring: 1, led:  0}, to: {ring: 0, led:  8} },\n                {from: {ring: 1, led:  6}, to: {ring: 3, led: 14} },\n                {from: {ring: 1, led: 10}, to: {ring: 2, led:  2} },\n                {from: {ring: 2, led:  2}, to: {ring: 1, led: 10} },\n                {from: {ring: 3, led: 14}, to: {ring: 1, led:  6} },\n            ];\n            \n        var initialize = function(rings)\n        {\n            rings.setAllLeds(false);\n        };\n        \n        var logic = function(rings) {\n            states.forEach(function (s) {\n                rings.setLed(s.position.ring, s.position.led, false);                \n            });\n                \n            for (var s = 0; s < states.length; s++) {\n                var state = states[s];\n                \n                // follow junction, reversing if necessary\n                for (var i = 0; i < junctions.length; i++) {\n                    if (junctions[i].from.ring == state.position.ring\n                        && junctions[i].from.led == state.position.led) {\n                        // Jump!\n                        state.position.ring = junctions[i].to.ring;\n                        state.position.led = junctions[i].to.led;\n                        state.direction = !state.direction;\n                        break;\n                    }\n                }\n                \n                if (state.direction) {\n                    state.position.led++;\n                    if (state.position.led > 15) {\n                        state.position.led = 0;\n                    }\n                }\n                else {\n                    state.position.led--;\n                    if (state.position.led < 0) {\n                        state.position.led = 15;\n                    }\n                }\n                \n                rings.setLed(state.position.ring, state.position.led, true);\n            }\n        };\n        \n        return {\n            initialize: initialize,\n            logic: logic \n        };\n    };\n    \n    Pattern.ChasingLeds.Chaser = Chaser;\n});"]],"start1":0,"start2":0,"length1":0,"length2":2916}]],"length":2916}
{"contributors":[],"silentsave":false,"ts":1372286160506,"patch":[[{"diffs":[[0,"Leds = function("],[1,"states"],[0,") {\n        var "]],"start1":242,"start2":242,"length1":32,"length2":38},{"diffs":[[0,"ates) {\n        "],[1,"/*"],[0,"var states = [{\n"]],"start1":260,"start2":260,"length1":32,"length2":34},{"diffs":[[0,"     }];"],[1,"*/"],[0,"\n       "]],"start1":685,"start2":685,"length1":16,"length2":18}]],"length":2926,"saved":false}
{"ts":1372286213681,"patch":[[{"diffs":[[0,"    "],[-1,"/*"],[0,"var "]],"start1":272,"start2":272,"length1":10,"length2":8},{"diffs":[[0," }];"],[-1,"*/"],[0,"\n   "]],"start1":687,"start2":687,"length1":10,"length2":8}]],"length":2922,"saved":false}
{"ts":1372286215830,"patch":[[{"diffs":[[0,"unction("],[-1,"states"],[0,") {\n    "]],"start1":250,"start2":250,"length1":22,"length2":16}]],"length":2916,"saved":false}
{"ts":1372286220115,"patch":[[{"diffs":[[0,"Leds = function("],[1,"chasers"],[0,") {\n        var "]],"start1":242,"start2":242,"length1":32,"length2":39}]],"length":2923,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372286355655,"patch":[[{"diffs":[[0," [{\n"],[-1,"            position: {\n    "],[0,"    "]],"start1":289,"start2":289,"length1":36,"length2":8},{"diffs":[[0,"    "],[-1,"    "],[0,"led: 0"],[-1,"\n            }"],[0,",\n  "]],"start1":322,"start2":322,"length1":32,"length2":14},{"diffs":[[0,"  {\n"],[-1,"            position: {\n    "],[0,"    "]],"start1":379,"start2":379,"length1":36,"length2":8},{"diffs":[[0,"    "],[-1,"    "],[0,"led: 10"],[-1,"\n            }"],[0,",\n  "]],"start1":412,"start2":412,"length1":33,"length2":15},{"diffs":[[0,"  {\n"],[-1,"            position: {\n    "],[0,"    "]],"start1":470,"start2":470,"length1":36,"length2":8},{"diffs":[[0,"    "],[-1," "],[-1,"   "],[0,"led: 6"],[-1,"\n            }"],[0,",\n  "]],"start1":503,"start2":503,"length1":32,"length2":14},{"diffs":[[0,"d(s."],[-1,"position.ring, s.position"],[1,"ring, s"],[0,".led"]],"start1":1306,"start2":1306,"length1":33,"length2":15},{"diffs":[[0,"ng == state."],[-1,"position."],[0,"ring\n       "]],"start1":1654,"start2":1654,"length1":33,"length2":24},{"diffs":[[0,"= state."],[-1,"position."],[0,"led) {\n "]],"start1":1721,"start2":1721,"length1":25,"length2":16},{"diffs":[[0,"      state."],[-1,"position."],[0,"ring = junct"]],"start1":1787,"start2":1787,"length1":33,"length2":24},{"diffs":[[0,"      state."],[-1,"position."],[0,"led = juncti"]],"start1":1846,"start2":1846,"length1":33,"length2":24},{"diffs":[[0,"  state."],[-1,"position."],[0,"led++;\n "]],"start1":2090,"start2":2090,"length1":25,"length2":16},{"diffs":[[0,"  if (state."],[-1,"position."],[0,"led > 15) {\n"]],"start1":2123,"start2":2123,"length1":33,"length2":24},{"diffs":[[0,"      state."],[-1,"position."],[0,"led = 0;\n   "]],"start1":2165,"start2":2165,"length1":33,"length2":24},{"diffs":[[0,"  state."],[-1,"position."],[0,"led--;\n "]],"start1":2267,"start2":2267,"length1":25,"length2":16},{"diffs":[[0,"    "],[-1,"if ("],[1,"    "],[0,"state."],[-1,"position.led < 0) {"],[1,"led = 15;"],[0,"\n   "]],"start1":2298,"start2":2298,"length1":37,"length2":27},{"diffs":[[0,"    "],[-1,"    "],[1,"if ("],[0,"state."],[-1,"position.led = 15;"],[1,"led < 0) {"],[0,"\n   "]],"start1":2338,"start2":2338,"length1":36,"length2":28},{"diffs":[[0,"d(state."],[-1,"position."],[0,"ring, st"]],"start1":2447,"start2":2447,"length1":25,"length2":16},{"diffs":[[0,"ate."],[-1,"position."],[0,"led,"]],"start1":2463,"start2":2463,"length1":17,"length2":8}]],"length":2659,"saved":false}
{"ts":1372286598485,"patch":[[{"diffs":[[0,"                "],[-1,"    "],[1,"if ("],[0,"state.led = 15;\n"]],"start1":2286,"start2":2286,"length1":36,"length2":36},{"diffs":[[0,"led "],[-1,"= 15;"],[1,"< 0) {"],[0,"\n   "]],"start1":2312,"start2":2312,"length1":13,"length2":14},{"diffs":[[0,"                "],[-1,"if ("],[1,"    "],[0,"state.led < 0) {"]],"start1":2327,"start2":2327,"length1":36,"length2":36},{"diffs":[[0,"      state.led "],[-1,"< 0) {"],[1,"= 15;"],[0,"\n               "]],"start1":2341,"start2":2341,"length1":38,"length2":37}]],"length":2659,"saved":false}
